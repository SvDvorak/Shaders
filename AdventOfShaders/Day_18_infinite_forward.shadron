#extension gif
#include <linearstep>
#include <perlin>

parameter vec3 Background = vec3(0) : color();
parameter vec3 Wave1 = vec3(0) : color();
parameter vec3 Wave2 = vec3(0) : color();

glsl vec4 wavy(vec2 pos, float time) {
    vec2 centerPos = abs(pos - vec2(0.5));
    float value = mod(centerPos.x + centerPos.y - time*0.4 + perlinNoise(centerPos*centerPos*10)*0.1, 0.4);
    float wave1 = step(value, 0.5) * step(0.3, value);


    value = mod(abs(centerPos.x) + abs(centerPos.y) - (time+0.5)*0.4 + perlinNoise(centerPos)*0.1, 0.4);
    float wave2 = step(value, 0.5) * step(0.3, value);
    vec3 color = mix(Background, mix(Wave1, Wave2, linearstep(-1.0, 1.0, wave2-wave1)), wave1+wave2); 
    return vec4(color, 1);
}

animation wavyAnimation = glsl(wavy, vec2(512, 512));

animation QuantizedOutputAnimation = quantize(wavyAnimation, 32);
export gif(QuantizedOutputAnimation, "C:\\Users\\Unkno\\Desktop\\tmp\\Shadron\\Day_18_infinite_forward.gif", 20, 1.0, true);